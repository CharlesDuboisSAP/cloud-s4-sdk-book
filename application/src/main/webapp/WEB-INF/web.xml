<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0" metadata-complete="false">

    <session-config>
        <session-timeout>20</session-timeout>
    </session-config>

    <login-config>
        <auth-method>XSUAA</auth-method>
    </login-config>

    <security-role>
        <role-name>ViewAddresses</role-name>
    </security-role>
    <security-role>
        <role-name>WriteAddresses</role-name>
    </security-role>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Read business partners</web-resource-name>
            <url-pattern>/api/business-partners/</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>ViewAddresses</role-name>
        </auth-constraint>
    </security-constraint>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Write business partners</web-resource-name>
            <url-pattern>/api/business-partners/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>WriteAddresses</role-name>
        </auth-constraint>
    </security-constraint>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Write business partners</web-resource-name>
            <url-pattern>/api/addresses-local/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>WriteAddresses</role-name>
        </auth-constraint>
    </security-constraint>

    <filter>
        <filter-name>HttpSecurityHeadersFilter</filter-name>
        <filter-class>com.sap.cloud.sdk.cloudplatform.security.servlet.HttpSecurityHeadersFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HttpSecurityHeadersFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>HttpCachingHeaderFilter</filter-name>
        <filter-class>com.sap.cloud.sdk.cloudplatform.security.servlet.HttpCachingHeaderFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HttpCachingHeaderFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- This is necessary to expose the DataSource container-agnostic under JNDI name java:comp/env/jdbc/book-project-database
     instead of container-specific JNDI name java:openejb/Resources/jdbc/book-project-database -->
    <resource-ref>
        <description>DB Connection</description>
        <res-ref-name>jdbc/book-project-database</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
    </resource-ref>
</web-app>
